// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        // global variables
        kotlin_version = '1.3.61'
        room_version = '2.2.3'
        coroutines_android_version = '1.3.2'
        androidx_test_version = '1.2.0'
        appcompat_version = '1.1.0'
        constraint_layout_version = '1.1.3'
        expresso_version = '3.2.0'
        gson_version = '2.8.6'
        junit_version = '4.12'
        lifecycle_version = '2.2.0'
        livedata_version = '2.2.0-rc02' // check this
        material_version = '1.0.0'
        retrofit_gson_version = '2.6.2'
        retrofit_version = '2.6.2'
        truth_version = '1.0'
        work_version = '2.2.0'

        // local variables (use def)

        libraries = [
                // Kotlin standard library
                "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",

                // Coroutines
                "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_android_version",
                "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_android_version",

                // Android UI and appcompat
                "androidx.appcompat:appcompat:$appcompat_version",
                "com.google.android.material:material:$material_version",
                "androidx.constraintlayout:constraintlayout:$constraint_layout_version",

                // ViewModel and LiveData
                "androidx.lifecycle:lifecycle-extensions:$lifecycle_version",
                "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_version",
                "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",

                "androidx.work:work-runtime-ktx:$work_version",

                // Room for database
                "androidx.room:room-ktx:$room_version",

                // network & serialization
                "com.google.code.gson:gson:$gson_version",
                "com.squareup.retrofit2:converter-gson:$retrofit_gson_version",
                "com.squareup.retrofit2:retrofit:$retrofit_version",
        ]

        librariesKapt = [
                "androidx.room:room-compiler:$room_version",
        ]

        librariesDebug = [
                "com.google.truth:truth:$truth_version",
        ]

        testLibraries = [
                "junit:junit:$junit_version",

                // Coroutines testing
                "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android_version",

                // mocks
                "org.mockito:mockito-core:2.23.0",

                //  Architecture Components testing libraries
                "androidx.arch.core:core-testing:$lifecycle_version"
        ]

        androidTestLibraries = [
                "junit:junit:$junit_version",
                "androidx.test:runner:$androidx_test_version",
                "androidx.test:rules:$androidx_test_version",

                // Espresso
                "androidx.test.espresso:espresso-core:$expresso_version",
                "androidx.test.espresso:espresso-contrib:$expresso_version",
                "androidx.test.espresso:espresso-intents:$expresso_version",

                //  Architecture Components testing libraries
                "androidx.arch.core:core-testing:$lifecycle_version",
                "androidx.work:work-testing:$work_version",

                // Coroutines testing
                "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android_version",
        ]

    }

    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.3'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
